// 
// GameTimer
// 
@PointClass 
metadata
{
	entity_tool_name = "Game Timer"
	entity_tool_group = "Effects"
	entity_tool_tip = "Spawns a Panel with a Timer/Countdown"
}
= info_gametimer : "Spawnpoint for Timer"
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
]

// 
// RlGlMapController
// 
@PointClass 
metadata
{
	entity_tool_name = "Logic RlGl"
	entity_tool_group = "Logic"
	entity_tool_tip = "Get event calls to change states on the map"
	auto_apply_material = "materials/tools/toolstrigger.vmat"
}
= logic_rlgl : "Logic entity for the RlGl Gamemode"
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"

	input OpenTheRoof(void) : "This will open the roof on the RlGl Map, usually before the beginning of the Game"
	input CloseTheRoof(void) : "This will close the roof on the RlGl Map, usually at the end of the Game"

	output OpenRoof(void) : ""
	output CloseRoof(void) : ""
]

// 
// Rlgls
// 
@PointClass 
metadata
{
	entity_tool_name = "RlGl Spawnpoint"
	entity_tool_group = "Player"
	entity_tool_tip = "Defines a point where a defined entity can (re)spawn"
}
= info_rlgl_spawn : "Spawnpoint for red light green light game"
[
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	parentname(target_destination) [ group="Hierarchy" ] : "Parent" : : "The name of this entity's parent in the movement hierarchy. Entities with parents move with their parent."
	type(choices) : "SpawnPoint Type" : 1 : "" =
	[
		0 : "DOLL"
		1 : "PLAYER"
		2 : "SUPERVISOR"
		3 : "GUNNER"
	]
	enable_shadows(boolean) [ group="Render Properties" ] : "Shadow Casting" : 1 : "Whether this entity should cast shadows or not"
]

